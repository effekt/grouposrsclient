generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id            Int      @id @default(autoincrement())
  uuid          String   @db.Uuid
  secret_phrase String
  created_at    DateTime @default(now()) @db.Timestamp(6)
  player        player[]
  quest         quest[]
  skill         skill[]
}

model player {
  id          Int      @id @default(autoincrement())
  user_id     Int
  player_name String
  created_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")
  quest       quest[]
  skill       skill[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model skill {
  user_id     Int
  player_id   Int
  skill_xp    Json?     @db.Json
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  skill_level Json?     @db.Json
  player      player    @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "player_id_fk")
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")

  @@id([user_id, player_id], map: "user_player_id_pk")
}

model quest {
  user_id    Int
  player_id  Int
  quests     Json?    @db.Json
  created_at DateTime @default(now()) @db.Timestamp(6)
  player     player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "player_id_fk")
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")

  @@id([user_id, player_id], map: "user_id_player_id_pk")
}
